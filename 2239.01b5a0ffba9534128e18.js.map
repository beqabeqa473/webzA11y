{"version":3,"file":"2239.01b5a0ffba9534128e18.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/Avatar.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/useInfiniteScroll.ts","webpack://telegram-t/./src/hooks/useInterval.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/resetScroll.ts"],"sourcesContent":["import type { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type {\n  ApiChat, ApiPhoto, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserOnline,\n} from '../../global/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName, { createClassNameBuilder } from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './Avatar.scss';\n\nconst LOOP_COUNT = 3;\n\nconst cn = createClassNameBuilder('Avatar');\ncn.media = cn('media');\ncn.icon = cn('icon');\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'mini' | 'small' | 'small-mobile' | 'medium' | 'large' | 'jumbo';\n  chat?: ApiChat;\n  user?: ApiUser;\n  photo?: ApiPhoto;\n  userStatus?: ApiUserStatus;\n  text?: string;\n  isSavedMessages?: boolean;\n  withVideo?: boolean;\n  loopIndefinitely?: boolean;\n  noPersonalPhoto?: boolean;\n  lastSyncTime?: number;\n  observeIntersection?: ObserveFn;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  photo,\n  userStatus,\n  text,\n  isSavedMessages,\n  withVideo,\n  loopIndefinitely,\n  lastSyncTime,\n  noPersonalPhoto,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const videoLoopCountRef = useRef(0);\n  const isDeleted = user && isDeletedUser(user);\n  const isReplies = user && isChatWithRepliesBot(user.id);\n  const isForum = chat?.isForum;\n  let imageHash: string | undefined;\n  let videoHash: string | undefined;\n\n  const shouldLoadVideo = withVideo && photo?.isVideo;\n\n  const shouldFetchBig = size === 'jumbo';\n  if (!isSavedMessages && !isDeleted) {\n    if (user && !noPersonalPhoto) {\n      imageHash = getChatAvatarHash(user, shouldFetchBig ? 'big' : undefined);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat, shouldFetchBig ? 'big' : undefined);\n    } else if (photo) {\n      imageHash = `photo${photo.id}?size=m`;\n      if (photo.isVideo && withVideo) {\n        videoHash = `videoAvatar${photo.id}?size=u`;\n      }\n    }\n  }\n\n  const imgBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const videoBlobUrl = useMedia(videoHash, !shouldLoadVideo, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const hasBlobUrl = Boolean(imgBlobUrl || videoBlobUrl);\n  // `videoBlobUrl` can be taken from memory cache, so we need to check `shouldLoadVideo` again\n  const shouldPlayVideo = Boolean(videoBlobUrl && shouldLoadVideo);\n\n  const transitionClassNames = useMediaTransition(hasBlobUrl);\n\n  const isOnline = !isSavedMessages && user && userStatus && isUserOnline(user, userStatus);\n  const onlineTransitionClassNames = useMediaTransition(isOnline);\n  const onlineClassNamesPrefixed = useMemo(() => {\n    return onlineTransitionClassNames.split(' ').map((c) => (c === 'shown' ? 'online' : `online-${c}`)).join(' ');\n  }, [onlineTransitionClassNames]);\n\n  const handleVideoEnded = useCallback((e) => {\n    const video = e.currentTarget;\n    if (!videoBlobUrl) return;\n\n    if (loopIndefinitely) return;\n\n    videoLoopCountRef.current += 1;\n    if (videoLoopCountRef.current >= LOOP_COUNT) {\n      video.style.display = 'none';\n    }\n  }, [loopIndefinitely, videoBlobUrl]);\n\n  const lang = useLang();\n\n  let content: TeactNode | undefined;\n  const author = user ? getUserFullName(user) : (chat ? getChatTitle(lang, chat) : text);\n\n  if (isSavedMessages) {\n    content = (\n      <i\n        className={buildClassName(cn.icon,\n          'icon',\n          'icon-avatar-saved-messages')}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (isDeleted) {\n    content = (\n      <i\n        className={buildClassName(cn.icon,\n          'icon',\n          'icon-avatar-deleted-account')}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (isReplies) {\n    content = (\n      <i\n        className={buildClassName(cn.icon,\n          'icon',\n          'icon-reply-filled')}\n        role=\"img\"\n        aria-label={author}\n      />\n    );\n  } else if (hasBlobUrl) {\n    content = (\n      <>\n        <img\n          src={imgBlobUrl}\n          className={buildClassName(cn.media, 'avatar-media', transitionClassNames, videoBlobUrl && 'poster')}\n          alt={author}\n          decoding=\"async\"\n        />\n        {shouldPlayVideo && (\n          <OptimizedVideo\n            canPlay\n            src={videoBlobUrl}\n            className={buildClassName(cn.media, 'avatar-media', 'poster')}\n            muted\n            loop={loopIndefinitely}\n            autoPlay\n            disablePictureInPicture\n            playsInline\n            onEnded={handleVideoEnded}\n          />\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isReplies && 'replies-bot-account',\n    isForum && 'forum',\n    onlineClassNamesPrefixed,\n    onClick && 'interactive',\n    (!isSavedMessages && !imgBlobUrl) && 'no-photo',\n  );\n\n  const hasMedia = Boolean(isSavedMessages || imgBlobUrl);\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, hasMedia);\n    }\n  }, [onClick, hasMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      data-test-sender-id={IS_TEST ? senderId : undefined}\n      aria-label={typeof content === 'string' ? author : undefined}\n    >\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport useLang from '../../hooks/useLang';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  title?: string;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  areButtonsInColumn?: boolean;\n  children?: React.ReactNode;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  title,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  areButtonsInColumn,\n  children,\n}) => {\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className=\"confirm\"\n      title={title || lang('Telegram')}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { RefObject, UIEvent } from 'react';\nimport React, {\n  useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\n\nimport { LoadMoreDirection } from '../../types';\nimport type { FC } from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  onLoadMore,\n  onScroll,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = containerRef.current!;\n    if (clientHeight && scrollHeight <= clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      const container = containerRef.current!;\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = container;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = container;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(container, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      role={className === \"chat-list custom-scroll\" ? \"region\" : undefined}\n      aria-label={className === \"chat-list custom-scroll\" ? \"Chats navigation\" : undefined}\n      onScroll={handleScroll}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n          role=\"list\"\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { enableDirectTextInput, disableDirectTextInput } from '../../util/directInputManager';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useHistoryBack from '../../hooks/useHistoryBack';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  dialogRef?: RefObject<HTMLDivElement>;\n};\n\ntype StateProps = {\n  shouldSkipHistoryAnimations?: boolean;\n};\n\nconst Modal: FC<OwnProps & StateProps> = ({\n  dialogRef,\n  title,\n  className,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  shouldSkipHistoryAnimations,\n}) => {\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen, onCloseAnimationEnd, shouldSkipHistoryAnimations, undefined, shouldSkipHistoryAnimations,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  }, [onEnter]);\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef}>\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\" style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { GlobalState } from '../types';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { isChatBasicGroup } from '../helpers';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\nimport { selectIsCurrentUserPremium } from './users';\nimport { DEFAULT_LIMITS } from '../../config';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: string | number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nconst useInfiniteScroll = <ListId extends string | number>(\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: ListId[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n): [ListId[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: ListId;\n  }>();\n\n  const viewportIdsRef = useRef<ListId[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, LoadMoreDirection.Forwards, listSlice, listIds[0]);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  if (isDisabled) {\n    lastParamsRef.current = {};\n  }\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  } else if (!listIds) {\n    viewportIdsRef.current = undefined;\n  }\n\n  const getMore: GetMore = useCallback(({\n    direction,\n    noScroll,\n  }: { direction: LoadMoreDirection; noScroll?: boolean }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    if (!noScroll) {\n      lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n    }\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, direction, listSlice, offsetId);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice<ListId extends string | number>(\n  sourceIds: ListId[],\n  direction: LoadMoreDirection,\n  listSlice: number,\n  offsetId?: ListId,\n) {\n  const { length } = sourceIds;\n  const index = offsetId ? sourceIds.indexOf(offsetId) : 0;\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n\nexport default useInfiniteScroll;\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n    if (!noFirst) savedCallback.current();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport forceReflow from './forceReflow';\n\nconst resetScroll = (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n\n// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1264266\nexport function patchChromiumScroll(element: HTMLElement) {\n  element.style.display = 'none';\n  forceReflow(element);\n  element.style.display = '';\n}\n\nexport default resetScroll;\n"],"names":["cn","createClassNameBuilder","media","icon","memo","_ref","className","size","chat","user","photo","userStatus","text","isSavedMessages","withVideo","loopIndefinitely","lastSyncTime","noPersonalPhoto","onClick","ref","useRef","videoLoopCountRef","isDeleted","isDeletedUser","isReplies","isChatWithRepliesBot","id","isForum","imageHash","videoHash","shouldLoadVideo","isVideo","shouldFetchBig","getChatAvatarHash","undefined","imgBlobUrl","useMedia","ApiMediaFormat","videoBlobUrl","hasBlobUrl","Boolean","shouldPlayVideo","transitionClassNames","useMediaTransition","isOnline","isUserOnline","onlineTransitionClassNames","onlineClassNamesPrefixed","useMemo","split","map","c","join","handleVideoEnded","useCallback","e","video","currentTarget","current","style","display","lang","useLang","content","author","getUserFullName","getChatTitle","React","buildClassName","role","src","alt","decoding","OptimizedVideo","canPlay","muted","loop","autoPlay","disablePictureInPicture","playsInline","onEnded","userFullName","getFirstLetters","title","isUserId","fullClassName","getUserColorKey","hasMedia","handleClick","senderId","IS_TEST","renderText","withGlobal","global","_ref2","userId","selectCurrentChat","selectUser","contactName","getUserFirstOrLastName","isOpen","onClose","deleteChatMember","getActions","handleDeleteChatMember","chatId","ConfirmDialog","textParts","confirmLabel","confirmHandler","confirmIsDestructive","onCloseAnimationEnd","header","areButtonsInColumn","children","containerRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","textPart","onKeyDown","Button","isText","color","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","onLoadMore","onScroll","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","length","direction","LoadMoreDirection","useEffect","scrollHeight","clientHeight","useLayoutEffect","requestForcedReflow","container","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","teactFastList","buildStyle","IS_ANDROID","dialogRef","isSlim","hasCloseButton","noBackdrop","noBackdropClose","onEnter","shouldSkipHistoryAnimations","shouldRender","useShowTransition","modalRef","disableDirectTextInput","enableDirectTextInput","handleEnter","preventDefault","captureKeyboardListeners","onEsc","element","key","stopPropagation","focusableElements","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","focus","addEventListener","removeEventListener","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","tabIndex","round","ariaLabel","selectChatGroupCall","fullInfo","selectChatFullInfo","groupCallId","selectGroupCall","groupCalls","byId","selectGroupCallParticipant","participantId","participants","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectChat","isChatBasicGroup","isCreator","adminRights","manageCall","activeGroupCallId","selectPhoneCallUser","phoneCall","currentUserId","adminId","selectCurrentLimit","limit","_limits$limit","appConfig","DEFAULT_LIMITS","isPremium","selectIsCurrentUserPremium","limits","value","selectPremiumLimit","getViewportSlice","sourceIds","listSlice","offsetId","indexOf","indexForDirection","Math","max","to","newViewportIds","slice","areSomeLocal","areAllLocal","listIds","isDisabled","lastParamsRef","viewportIdsRef","forceUpdate","useForceUpdate","prevListIds","usePrevious","prevIsDisabled","areSortedArraysEqual","getMore","viewportIds","callback","delay","noFirst","savedCallback","setInterval","clearInterval","cb","dependencies","debugKey","prevDepsRef","prevDeps","counter","getIsDirectTextInputDisabled","IS_IOS","overflow"],"sourceRoot":""}