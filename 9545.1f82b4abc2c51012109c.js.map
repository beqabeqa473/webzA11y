{"version":3,"file":"9545.1f82b4abc2c51012109c.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/FakeIcon.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/VerifiedIcon.tsx","webpack://telegram-t/./src/components/common/FullNameTitle.module.scss?6448","webpack://telegram-t/./src/components/common/FullNameTitle.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumIcon.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/AvatarBadge.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Skeleton.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useContextMenuHandlers.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useUniqueId.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMenuPosition.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/lib/fastBlur.js","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/captureEvents.ts","webpack://telegram-t/./src/util/lethargy.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/stopEvent.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\nimport Avatar from '../../common/Avatar';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants).filter((_, i) => i < 3).map(({ id, isUser }) => {\n      if (isUser) {\n        if (!usersById[id]) {\n          return undefined;\n        }\n        return { user: usersById[id] };\n      } else {\n        if (!chatsById[id]) {\n          return undefined;\n        }\n        return { chat: chatsById[id] };\n      }\n    }).filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  if (!groupCall) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        !isActive && 'is-hidden',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', groupCall.participantsCount || 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {fetchedParticipants.map((p) => {\n          if (!p) return undefined;\n\n          return (\n            <Avatar\n              key={p.user ? p.user.id : p.chat.id}\n              chat={p.chat}\n              user={p.user}\n            />\n          );\n        })}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport type { ApiSticker } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean; lastSyncTime?: number };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, lastSyncTime, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n    lastSyncTime,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad, undefined, lastSyncTime);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isPreviewLoaded, markPreviewLoaded] = useFlag(Boolean(thumbDataUri) || loadedPreviewUrls.has(previewUrl));\n  const transitionClassNames = useMediaTransition(isPreviewLoaded);\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useCallback(() => {\n    markPreviewLoaded();\n    loadedPreviewUrls.add(previewUrl);\n  }, [markPreviewLoaded, previewUrl]);\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, transitionClassNames)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={styles.preview} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={styles.preview}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={markAnimationReady} noTransition />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport { ApiMediaFormat } from '../../api/types';\nimport type { ISettings } from '../../types';\nimport { AudioOrigin } from '../../types';\nimport type { LangFn } from '../../hooks/useLang';\n\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\nimport renderText from './helpers/renderText';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\nimport { captureEvents } from '../../util/captureEvents';\nimport useMedia from '../../hooks/useMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  lastSyncTime?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n// eslint-disable-next-line max-len\nconst TRANSCRIBE_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 24\" class=\"loading-svg\"><rect class=\"loading-rect\" fill=\"transparent\" width=\"32\" height=\"24\" stroke-width=\"3\" stroke-linejoin=\"round\" rx=\"6\" ry=\"6\" stroke=\"var(--accent-color)\" stroke-dashoffset=\"1\" stroke-dasharray=\"32,68\"></rect></svg>';\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  lastSyncTime,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = (isActivated || PRELOAD) && lastSyncTime;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }, [message, onPlay]);\n\n  const handleTrackChange = useCallback(() => {\n    setIsActivated(false);\n  }, []);\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isUploading, isPlaying, isActivated, playPause, onCancelUpload, onPlay, message.id, message.chatId, origin]);\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  }, [cancelMessageMediaDownload, downloadMessageMedia, isDownloading, message]);\n\n  const handleSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  const handleTranscribe = useCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  }, [message.chatId, message.id, transcribeAudio]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  const transcribeSvgMemo = useMemo(() => (\n    <div dangerouslySetInnerHTML={{ __html: TRANSCRIBE_SVG }} />\n  ), []);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          transcribeSvgMemo,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  svgMemo?: React.ReactNode,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && svgMemo}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport {\n  getChatLink,\n  getTopicLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  lastSyncTime,\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    if (lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [loadFullUser, userId, lastSyncTime]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo\n      ? getTopicLink(chat.id, activeChatUsernames?.[0].username, topicId)\n      : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, activeChatUsernames, topicId, chatInviteLink]);\n\n  const handleNotificationChange = useCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  }, [chatId, isTopicInfo, topicId, updateChatMutedState, updateTopicMutedState]);\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { lastSyncTime, countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    return {\n      lastSyncTime,\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport {\n  isUserId,\n  isUserBot,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../global/helpers';\nimport useLang from '../../hooks/useLang';\nimport renderText from './helpers/renderText';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockContact,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockContact({ contactId: chat.id, accessHash: chat.accessHash! });\n\n    onClose();\n  }, [deleteHistory, chat.id, chat.accessHash, blockContact, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback, memo, useRef, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n  isDownloading,\n}) => {\n  const dispatch = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      dispatch.cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n    } else {\n      dispatch.downloadMessageMedia({ message });\n    }\n  }, [\n    isUploading, isDownloading, isTransferring, withMediaViewer, onCancelUpload, dispatch, message, onMediaClick,\n  ]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'icon-play' : 'icon-eye') : 'icon-download'}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiFakeType } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport './FakeIcon.scss';\n\ntype OwnProps = {\n  fakeType: ApiFakeType;\n};\n\nconst FakeIcon: FC<OwnProps> = ({\n  fakeType,\n}) => {\n  const lang = useLang();\n\n  return (\n    <span className=\"FakeIcon\">\n      {lang(fakeType === 'fake' ? 'FakeMessage' : 'ScamMessage')}\n    </span>\n  );\n};\n\nexport default memo(FakeIcon);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../lib/teact/teact';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useLang from '../../hooks/useLang';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: string;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon || 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\n// eslint-disable-next-line max-len\nconst VERIFIED_ICON = { __html: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.3 2.9c.1.1.2.1.3.2.7.6 1.3 1.1 2 1.7.3.2.6.4.9.4.9.1 1.7.2 2.6.2.5 0 .6.1.7.7.1.9.1 1.8.2 2.6 0 .4.2.7.4 1 .6.7 1.1 1.3 1.7 2 .3.4.3.5 0 .8-.5.6-1.1 1.3-1.6 1.9-.3.3-.5.7-.5 1.2-.1.8-.2 1.7-.2 2.5 0 .4-.2.5-.6.6-.8 0-1.6.1-2.5.2-.5 0-1 .2-1.4.5-.6.5-1.3 1.1-1.9 1.6-.3.3-.5.3-.8 0-.7-.6-1.4-1.2-2-1.8-.3-.2-.6-.4-.9-.4-.9-.1-1.8-.2-2.7-.2-.4 0-.5-.2-.6-.5 0-.9-.1-1.7-.2-2.6 0-.4-.2-.8-.4-1.1-.6-.6-1.1-1.3-1.6-2-.4-.4-.3-.5 0-1 .6-.6 1.1-1.3 1.7-1.9.3-.3.4-.6.4-1 0-.8.1-1.6.2-2.5 0-.5.1-.6.6-.6.9-.1 1.7-.1 2.6-.2.4 0 .7-.2 1-.4.7-.6 1.4-1.2 2.1-1.7.1-.2.3-.3.5-.2z\" style=\"fill: var(--color-fill)\"/><path class=\"lol\" d=\"M16.4 10.1l-.2.2-5.4 5.4c-.1.1-.2.2-.4 0l-2.6-2.6c-.2-.2-.1-.3 0-.4.2-.2.5-.6.7-.6.3 0 .5.4.7.6l1.1 1.1c.2.2.3.2.5 0l4.3-4.3c.2-.2.4-.3.6 0 .1.2.3.3.4.5.2 0 .3.1.3.1z\" style=\"fill: var(--color-checkmark)\"/></svg>' };\n\nconst VerifiedIcon: FC = () => {\n  return (\n    // eslint-disable-next-line react/no-danger\n    <span className=\"VerifiedIcon\" dangerouslySetInnerHTML={VERIFIED_ICON} />\n  );\n};\n\nexport default VerifiedIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ysHMmXALnn0fgFRc7Bn7\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_STATUS_LOOP_LIMIT } from '../../config';\nimport renderText from './helpers/renderText';\nimport { getChatTitle, getUserFullName, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport VerifiedIcon from './VerifiedIcon';\nimport FakeIcon from './FakeIcon';\nimport CustomEmoji from './CustomEmoji';\nimport PremiumIcon from './PremiumIcon';\n\nimport styles from './FullNameTitle.module.scss';\n\ntype OwnProps = {\n  peer: ApiChat | ApiUser;\n  className?: string;\n  noVerified?: boolean;\n  noFake?: boolean;\n  withEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  isSavedMessages?: boolean;\n  noLoopLimit?: boolean;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  observeIntersection?: ObserveFn;\n};\n\nconst FullNameTitle: FC<OwnProps> = ({\n  className,\n  peer,\n  noVerified,\n  noFake,\n  withEmojiStatus,\n  emojiStatusSize,\n  isSavedMessages,\n  noLoopLimit,\n  onEmojiStatusClick,\n  observeIntersection,\n}) => {\n  const lang = useLang();\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n  const emojiStatus = isUser && (peer as ApiUser).emojiStatus;\n  const isPremium = isUser && (peer as ApiUser).isPremium;\n\n  if (isSavedMessages) {\n    return (\n      <div className={buildClassName('title', styles.root, className)}>\n        <h3>{lang('SavedMessages')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className={buildClassName('title', styles.root, className)}>\n      <h3 dir=\"auto\" className=\"fullName\">{renderText(title || '')}</h3>\n      {!noVerified && peer.isVerified && <VerifiedIcon />}\n      {!noFake && peer.fakeType && <FakeIcon fakeType={peer.fakeType} />}\n      {withEmojiStatus && emojiStatus && (\n        <CustomEmoji\n          documentId={emojiStatus.documentId}\n          size={emojiStatusSize}\n          loopLimit={!noLoopLimit ? EMOJI_STATUS_LOOP_LIMIT : undefined}\n          observeIntersectionForLoading={observeIntersection}\n          onClick={onEmojiStatusClick}\n        />\n      )}\n      {withEmojiStatus && !emojiStatus && isPremium && <PremiumIcon />}\n    </div>\n  );\n};\n\nexport default memo(FullNameTitle);\n","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiTopic, ApiThreadInfo, ApiTypingStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { REM } from './helpers/mediaDimensions';\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  topic,\n  messagesCount,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && lastSyncTime) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (chat && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          chat={chat}\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      lastSyncTime,\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  }, [hideSpoiler, message, onClick]);\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\"};","import React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  }, []);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import React, {\n  useCallback, useRef, useEffect, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\n\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\n\nimport Loading from '../ui/Loading';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  }, [lockedIdsSet, selectedIds, onSelectedIdsChange, onFilterChange, onDisabledClick]);\n\n  const handleFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  }, [onFilterChange]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              chatOrUserId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../global/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: string;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  currentUserId?: string;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  currentUserId,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user?.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, chat.id === currentUserId);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PickerSelectedItem));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport generateIdFor from '../../util/generateIdFor';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './PremiumIcon.scss';\n\n// eslint-disable-next-line max-len\nconst PREMIUM_ICON = { __html: '<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"var(--color-fill)\"/></svg>' };\nconst store: Record<string, boolean> = {};\n\ntype OwnProps = {\n  withGradient?: boolean;\n  big?: boolean;\n  className?: string;\n  onClick?: VoidFunction;\n};\n\nconst PremiumIcon: FC<OwnProps> = ({\n  withGradient,\n  big,\n  className,\n  onClick,\n}) => {\n  const html = useMemo(() => {\n    return withGradient ? getPremiumIconGradient() : PREMIUM_ICON;\n  }, [withGradient]);\n\n  return (\n    <i\n      onClick={onClick}\n      className={buildClassName(\n        'PremiumIcon', className, withGradient && 'gradient', onClick && 'clickable', big && 'big',\n      )}\n      dangerouslySetInnerHTML={html}\n      title=\"Premium\"\n    />\n  );\n};\n\nfunction getPremiumIconGradient() {\n  const id = generateIdFor(store);\n  return {\n    // eslint-disable-next-line max-len\n    __html: `<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient id=\"${id}\" x1=\"3\" y1=\"63.5001\" x2=\"84.1475\" y2=\"-1.32262\" gradientUnits=\"userSpaceOnUse\"><stop stop-color=\"#6B93FF\"/><stop offset=\"0.439058\" stop-color=\"#976FFF\"/><stop offset=\"1\" stop-color=\"#E46ACE\"/></linearGradient></defs><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63869 12.1902L3.50621 14.1092C3.18049 14.3087 2.75468 14.2064 2.55515 13.8807C2.45769 13.7216 2.42864 13.5299 2.47457 13.3491L2.95948 11.4405C3.13452 10.7515 3.60599 10.1756 4.24682 9.86791L7.6642 8.22716C7.82352 8.15067 7.89067 7.95951 7.81418 7.80019C7.75223 7.67116 7.61214 7.59896 7.47111 7.62338L3.66713 8.28194C2.89387 8.41581 2.1009 8.20228 1.49941 7.69823L0.297703 6.69116C0.00493565 6.44581 -0.0335059 6.00958 0.211842 5.71682C0.33117 5.57442 0.502766 5.48602 0.687982 5.47153L4.35956 5.18419C4.61895 5.16389 4.845 4.99974 4.94458 4.75937L6.36101 1.3402C6.5072 0.987302 6.91179 0.819734 7.26469 0.965925C7.43413 1.03612 7.56876 1.17075 7.63896 1.3402L9.05539 4.75937C9.15496 4.99974 9.38101 5.16389 9.6404 5.18419L13.3322 5.47311C13.713 5.50291 13.9975 5.83578 13.9677 6.2166C13.9534 6.39979 13.8667 6.56975 13.7269 6.68896L10.9114 9.08928C10.7131 9.25826 10.6267 9.52425 10.6876 9.77748L11.5532 13.3733C11.6426 13.7447 11.414 14.1182 11.0427 14.2076C10.8642 14.2506 10.676 14.2208 10.5195 14.1249L7.36128 12.1902C7.13956 12.0544 6.8604 12.0544 6.63869 12.1902Z\" fill=\"url(#${id})\"/></svg>`,\n  };\n}\n\nexport default memo(PremiumIcon);\n","import React, {\n  useEffect, useCallback, memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type {\n  ApiUser, ApiTypingStatus, ApiUserStatus, ApiChatMember,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  selectChatMessages,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport TypingStatus from './TypingStatus';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  }\n  & Pick<GlobalState, 'lastSyncTime'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  adminMember,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId && lastSyncTime) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, loadFullUser, loadProfilePhotos, lastSyncTime, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n    if (user && hasMedia) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        mediaId: 0,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon ${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n      />\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\" dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime,\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserColorKey,\n  getUserFullName,\n  isUserId,\n  isChatWithRepliesBot,\n  isDeletedUser, getVideoAvatarMediaHash,\n} from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport useMedia from '../../hooks/useMedia';\nimport useLang from '../../hooks/useLang';\nimport useFlag from '../../hooks/useFlag';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport Spinner from '../ui/Spinner';\nimport OptimizedVideo from '../ui/OptimizedVideo';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  lastSyncTime?: number;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  lastSyncTime,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash, undefined, undefined, lastSyncTime);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash, undefined, undefined, lastSyncTime);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash, undefined, undefined, lastSyncTime);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useCallback, memo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiUser, ApiChat, ApiUserStatus, ApiTopic, ApiPhoto,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport usePhotosPreload from './hooks/usePhotosPreload';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport Transition from '../ui/Transition';\nimport TopicIcon from './TopicIcon';\nimport Avatar from './Avatar';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  const slideAnimation = hasSlideAnimation\n    ? (lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized')\n    : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(user || chat, photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  }, [openMediaViewer, userId, chatId, currentPhotoIndex, forceShowSelf]);\n\n  const handleClickPremium = useCallback(() => {\n    if (!user) return;\n\n    openPremiumModal({ fromUserId: user.id });\n  }, [openPremiumModal, user]);\n\n  const selectPreviousMedia = useCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  }, [currentPhotoIndex, isFirst]);\n\n  const selectNextMedia = useCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  }, [currentPhotoIndex, isLast]);\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleClickPremium}\n            noLoopLimit\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { useEffect } from '../../../lib/teact/teact';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  profile: ApiUser | ApiChat | undefined,\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { isSameReaction } from '../../global/helpers';\n\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useMedia from '../../hooks/useMedia';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport blankUrl from '../../assets/blank.png';\nimport './ReactionStaticEmoji.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName('ReactionStaticEmoji', transitionClassNames, className)}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\n\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLang from '../../hooks/useLang';\n\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\nimport InputText from '../ui/InputText';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media';\n  chatId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  chatId,\n  photo,\n  messageIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId, photo, reason: selectedReason, description,\n        });\n        break;\n    }\n    onClose();\n  }, [\n    description,\n    exitMessageSelectMode,\n    messageIds,\n    photo,\n    onClose,\n    reportMessages,\n    selectedReason,\n    chatId,\n    reportProfilePhoto,\n    reportPeer,\n    subject,\n  ]);\n\n  const handleSelectReason = useCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  }, []);\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !chatId)\n    || (subject === 'media' && (!chatId || !photo))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { getServerTimeOffset } from '../../util/serverTime';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useDynamicColorListener from '../../hooks/useDynamicColorListener';\n\nimport StickerView from './StickerView';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const { rgbColor: customColor } = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, isCustomEmoji, hasEffect: isPremium, stickerSetInfo,\n  } = sticker;\n  const isLocked = !isCurrentUserPremium && isPremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => {\n      return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n    },\n    [isStatusPicker],\n  );\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      openPremiumModal({ initialSection: 'premium_stickers' });\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextRemoveRecent = useCallback(() => {\n    onRemoveRecentClick!(sticker);\n  }, [onRemoveRecentClick, sticker]);\n\n  const handleContextUnfave = useCallback(() => {\n    onUnfaveClick!(sticker);\n  }, [onUnfaveClick, sticker]);\n\n  const handleContextFave = useCallback(() => {\n    onFaveClick!(sticker);\n  }, [onFaveClick, sticker]);\n\n  const handleSendQuiet = useCallback(() => {\n    onClick?.(clickArg, true);\n  }, [clickArg, onClick]);\n\n  const handleSendScheduled = useCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  }, [clickArg, onClick]);\n\n  const handleOpenSet = useCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  }, [openStickerSet, stickerSetInfo]);\n\n  const handleEmojiStatusExpiresClick = useCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  }, [setEmojiStatus, sticker, handleContextMenuClose, onContextMenuClick]);\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <i className=\"icon icon-lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <i className=\"icon icon-premium\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { ApiTopic } from '../../api/types';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../global/selectors';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport renderText from './helpers/renderText';\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport useLang from '../../hooks/useLang';\nimport { renderMessageSummary } from './helpers/renderMessageText';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiMessage } from '../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\nimport type { TextPart } from '../../../types';\nimport type { LangFn } from '../../../hooks/useLang';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\nimport trimText from '../../../util/trimText';\n\nexport function renderMessageText(\n  message: ApiMessage,\n  highlight?: string,\n  emojiSize?: number,\n  isSimple?: boolean,\n  truncateLength?: number,\n  isProtected?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    messageId: message.id,\n    isSimple,\n    isProtected,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText(message, highlight, undefined, true, truncateLength);\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { Bundles } from '../../util/moduleLoader';\nimport type { OwnProps } from './ChatFolderModal';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default memo(ChatFolderModalAsync);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\nimport AnimatedCounter from '../../common/AnimatedCounter';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const isShown = !forceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" aria-label=\"Pinned\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifySettings,\n  selectNotifyExceptions,\n  selectIsForumPanelOpen,\n} from '../../../global/selectors';\n\nimport ChatBadge from './ChatBadge';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  isForumPanelActive?: boolean;\n};\n\nconst AvatarBadge: FC<OwnProps & StateProps> = ({\n  chat,\n  isMuted,\n  isForumPanelActive,\n}) => {\n  return chat && (\n    <div className=\"avatar-badge-wrapper\">\n      <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={!isForumPanelActive} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isForumPanelActive: selectIsForumPanelOpen(global),\n    };\n  },\n)(AvatarBadge));\n","import React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { formatPastTimeShort } from '../../../util/dateFormat';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  getMessageAction,\n  getChatTitle,\n  getUserFirstOrLastName, getUserFullName,\n  getPrivateChatUserId,\n  isUserId,\n  selectIsChatMuted,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Avatar from '../../common/Avatar';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ReportModal from '../../common/ReportModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatBadge from './ChatBadge';\nimport AvatarBadge from './AvatarBadge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiUser | ApiChat;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastSyncTime?: number;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  canScrollDown,\n  canChangeFolder,\n  lastSyncTime,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleClick = useCallback(() => {\n    if (isForum) {\n      if (isSelectedForum) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  }, [isForum, chatId, isSelected, canScrollDown, isSelectedForum]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  }, [chatId, onDragEnter]);\n\n  const handleDelete = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleReport = useCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  }, [markRenderReportModal, openReportModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && lastSyncTime && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting, lastSyncTime, loadTopics]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\nfunction getAccessibleName() {\nconst peer = user || chat;\n//console.log(peer);\n  const isUser = isUserId(peer.id);\n  const title = isUser ? getUserFullName(peer as ApiUser) : getChatTitle(lang, peer as ApiChat);\n            const isSavedMessages=user?.isSelf;\nlet name = \"\";\nif (isSavedMessages) {\nname += `${lang('SavedMessages')}`;\n} else {\nname += title;\n}\nif (chat.type === 'chatTypeBasicGroup' || chat.type === 'chatTypeSuperGroup') {\nname += `, ${lang('AccDescrGroup')}`\n} else if (chat.type === 'chatTypeChannel') {\nname += `, ${lang('AccDescrChannel')}`\n} else if (user.type === 'userTypeBot') {\nname += `, ${lang('Bot')}`;\n}\nif (chat.unreadCount > 0) {\nname += `, ${chat.unreadCount} new messages`\n}\nif (chat.type !== 'chatTypePrivate' && chat.type !== 'chatTypeChannel') {\n    console.log(chat.type);\nname += !!lastMessageSender?.isSelf ? `, ${lang('FromYou')}` : `, ${getUserFirstOrLastName(lastMessageSender)}`;\n}\n//name += ` ${selectUser(global, chat.lastMessage.senderId)}`;\nif (getMessageText(chat.lastMessage)) {\nname += `, ${getMessageText(chat.lastMessage)}`\n}\nname += `, ${chat.lastMessage.isOutgoing ? lang('AccDescrSentDate', lang('TodayAtFormatted', formatPastTimeShort(lang, chat.lastMessage.date * 1000))) : lang('AccDescrReceivedDate',  lang('TodayAtFormatted', formatPastTimeShort(lang, chat.lastMessage.date * 1000)))}`\nreturn name;\n}\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      ariaLabel={getAccessibleName()}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className=\"status\">\n        <Avatar\n          chat={chat}\n          user={user}\n          userStatus={userStatus}\n          isSavedMessages={user?.isSelf}\n          lastSyncTime={lastSyncTime}\n        />\n        <AvatarBadge chatId={chatId} />\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={user || chat}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          chatId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastSyncTime: global.lastSyncTime,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\nimport { getChatTitle } from '../../../global/helpers';\n\nimport useLang from '../../../hooks/useLang';\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\n\nimport ListItem from '../../ui/ListItem';\nimport Badge from '../../ui/Badge';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    };\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    };\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    };\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import React, {\n  memo, useEffect, useRef, useCallback,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\nimport type { SettingsScreens } from '../../../types';\nimport type { GlobalState } from '../../../global/types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n} from '../../../config';\nimport { IS_MAC_OS, IS_PWA } from '../../../util/windowEnvironment';\nimport { getPinnedChatsCount, getOrderKey } from '../../../util/folderManager';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport Archive from './Archive';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  lastSyncTime?: number;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const { openChat, openNextChat, closeForumPanel } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n\n  const resolvedFolderId = (\n    folderType === 'all' ? ALL_FOLDER_ID : folderType === 'archived' ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = folderType === 'all' && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_PWA) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  }, [closeForumPanel, onLeftColumnContentChange]);\n\n  const handleArchivedDragEnter = useCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  }, [handleArchivedClick]);\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  }, []);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type {\n  ApiChat, ApiFormattedText, ApiTopic, ApiMessage, ApiMessageOutgoingStatus,\n  ApiTypingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageAction } from '../../../global/helpers';\n\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport ListItem from '../../ui/ListItem';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ChatBadge from './ChatBadge';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport TopicIcon from '../../common/TopicIcon';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  }, [markRenderDeleteModal, openDeleteModal]);\n\n  const handleDelete = useCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  }, [chat.id, deleteTopic, topic.id]);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  }, [openChat, chatId, topic.id, canScrollDown, focusLastMessage]);\n\n  const contextActions = useTopicContextActions(topic, chat, wasTopicOpened, canDelete, handleOpenDeleteModal);\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { compact } from '../../../../util/iteratees';\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions(\n  topic: ApiTopic,\n  chat: ApiChat,\n  wasOpened?: boolean,\n  canDelete?: boolean,\n  handleDelete?: NoneToVoidFunction,\n) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const newTabActionSeparator = actionOpenInNewTab && { isSeparator: true, key: 'newTabSeparator' };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: true }),\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      newTabActionSeparator,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiSticker } from '../../../api/types';\n\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport { getHasAdminRight } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport useLang from '../../../hooks/useLang';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport Button from '../../ui/Button';\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPICS_SLICE, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA,\n} from '../../../config';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useOrderDiff from './hooks/useOrderDiff';\nimport useLang from '../../../hooks/useLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useAppLayout from '../../../hooks/useAppLayout';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Button from '../../ui/Button';\nimport Topic from './Topic';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport HeaderActions from '../../middle/HeaderActions';\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport EmptyForum from './EmptyForum';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  lastSyncTime?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  lastSyncTime,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (lastSyncTime && chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, lastSyncTime, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useCallback(() => {\n    closeForumPanel();\n  }, [closeForumPanel]);\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  }, [chat, openChatWithInfo]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat || !lastSyncTime) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              withForumActions\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps, detachWhenChanged): StateProps => {\n    detachWhenChanged(selectIsForumPanelOpen(global));\n\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastSyncTime: global.lastSyncTime,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FC } from '../../lib/teact/teact';\nimport type { ApiChat } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getOrderedTopics } from '../../global/helpers';\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const lastMessage = renderLastMessage();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, lastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {lastMessage}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, { useLayoutEffect, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { LangFn } from '../../../../hooks/useLang';\nimport type {\n  ApiChat, ApiTopic, ApiMessage, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { Thread } from '../../../../global/types';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri, getMessageRoundVideo,\n  getMessageSenderName, getMessageSticker, getMessageVideo, isActionMessage, isChatChannel,\n} from '../../../../global/helpers';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport buildClassName from '../../../../util/buildClassName';\nimport useLang from '../../../../hooks/useLang';\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport MessageSummary from '../../../common/MessageSummary';\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiUser | ApiChat;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isUserId,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if (isUserId(senderId) && (sender as ApiUser).isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './HeaderMenuContainer';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default memo(HeaderMenuContainerAsync);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useRef,\n  useCallback,\n  useState,\n} from '../../lib/teact/teact';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport type { IAnchorPosition } from '../../types';\nimport { ManagementScreens } from '../../types';\n\nimport { ARE_CALLS_SUPPORTED, IS_PWA } from '../../util/windowEnvironment';\nimport {\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatBot,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n} from '../../global/selectors';\nimport useLang from '../../hooks/useLang';\nimport { useHotkeys } from '../../hooks/useHotkeys';\n\nimport Button from '../ui/Button';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  withForumActions?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  withForumActions,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  }, []);\n\n  const handleHeaderMenuClose = useCallback(() => {\n    setIsMenuOpen(false);\n  }, []);\n\n  const handleHeaderMenuHide = useCallback(() => {\n    setMenuPosition(undefined);\n  }, []);\n\n  const handleSubscribeClick = useCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  }, [joinChannel, chatId, shouldSendJoinRequest, showNotification, isChannel, lang]);\n\n  const handleStartBot = useCallback(() => {\n    sendBotCommand({ command: '/start' });\n  }, [sendBotCommand]);\n\n  const handleRestartBot = useCallback(() => {\n    restartBot({ chatId });\n  }, [chatId, restartBot]);\n\n  const handleJoinRequestsClick = useCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  }, [requestNextManagementScreen]);\n\n  const handleSearchClick = useCallback(() => {\n    if (withForumActions) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  }, [isMobile, noAnimation, onTopicSearch, openLocalTextSearch, withForumActions]);\n\n  const handleAsMessagesClick = useCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  }, [chatId, openChat]);\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_PWA || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  }, [canSearch, handleSearchClick]);\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel=\"Search in this chat\"\n            >\n              <i className=\"icon icon-search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!withForumActions && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canRestartBot={canRestartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={withForumActions}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n      };\n    }\n\n    const bot = selectChatBot(global, chatId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const canRestartBot = Boolean(bot && selectIsUserBlocked(global, bot.id));\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomEmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(CustomEmojiTooltipAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './CustomSendMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default memo(CustomSendMenuAsync);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  }, [onFileSelect, onHide, withQuick]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './EmojiTooltip';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default memo(EmojiTooltipAsync);\n","import safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    this.container.appendChild(this.video);\n    this.recalculatePositionAndSize();\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    if (!this.video) return;\n    const { size, position: { x, y } } = this.options;\n    const { width, height } = this.container.getBoundingClientRect();\n    this.video.style.left = `${Math.round(x * width)}px`;\n    this.video.style.top = `${Math.round(y * height)}px`;\n    this.video.style.width = `${size}px`;\n    this.video.style.height = `${size}px`;\n  }\n}\n","import {\n  useCallback, useEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getGlobal } from '../../../../global';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n  removeCustomEmojiInputRenderCallback,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useDynamicColorListener from '../../../../hooks/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isActive?: boolean,\n) {\n  const { rgbColor: textColor } = useDynamicColorListener(inputRef);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  }, []);\n\n  const synchronizeElements = useCallback(() => {\n    if (!inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${textColor?.join(',') || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, textColor?.join(','),\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  }, [\n    inputRef, sharedCanvasRef, sharedCanvasHqRef, clearPlayers, prefixId, textColor, absoluteContainerRef,\n    canPlayAnimatedEmojis,\n  ]);\n\n  useEffect(() => {\n    addCustomEmojiInputRenderCallback(synchronizeElements);\n\n    return () => {\n      removeCustomEmojiInputRenderCallback(synchronizeElements);\n    };\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive]);\n\n  useEffectWithPrevDeps(([prevTextColor]) => {\n    if (textColor !== prevTextColor) {\n      synchronizeElements();\n    }\n  }, [textColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  }, []);\n\n  const unfreezeAnimation = useCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  }, [canPlayAnimatedEmojis]);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: [number, number, number];\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      customEmoji.shouldUseTextColor ? textColor : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const absoluteVideo = new AbsoluteVideo(mediaUrl, absoluteContainerRef.current!, { size: SIZE, position });\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject, ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useRef, memo, useState, useCallback, useLayoutEffect,\n} from '../../../lib/teact/teact';\nimport { requestMutation, requestForcedReflow } from '../../../lib/fasterdom/fasterdom';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  editableInputId?: string;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  editableInputId,\n  isActive,\n  getHtml,\n  placeholder,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    isAttachmentModalInput ? 'attachment' : 'composer',\n    canPlayAnimatedEmojis,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  }, [maxInputHeight]);\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || (IS_TOUCH_ENV && isMobile)\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobile, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport type { OwnProps } from './SymbolMenu';\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default memo(SymbolMenuAsync);\n","import React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport type { IAnchorPosition } from '../../../types';\nimport type { ApiVideo, ApiSticker } from '../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport useFlag from '../../../hooks/useFlag';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isReady,\n  isSymbolMenuOpen,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  isAttachmentModal,\n  canSendPlainText,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n  isSymbolMenuForced,\n  className,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  }, [closeBotCommandMenu, closeSendAsMenu, openSymbolMenu]);\n\n  const handleSearchOpen = useCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  }, [setStickerSearchQuery, setGifSearchQuery]);\n\n  const handleSymbolMenuOpen = useCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : EDITABLE_INPUT_CSS_SELECTOR,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  }, [isAttachmentModal, isMobile, openSymbolMenu, closeBotCommandMenu]);\n\n  const getTriggerElement = useCallback(() => triggerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('#portals .SymbolMenu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(() => ({\n    withPortal: true,\n  }), []);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={className}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }, [selectedRange]);\n\n  const updateSelectedRange = useCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  }, [setSelectedRange]);\n\n  const getSelectedText = useCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.spoiler]);\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, [updateSelectedRange]);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, [updateSelectedRange]);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose, selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  const handleLinkUrlConfirm = useCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  }, [getSelectedElement, getSelectedText, isEditingLink, linkUrl, onClose, restoreSelection]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    openLinkControl, handleBoldText, handleUnderlineText, handleItalicText, handleMonospaceText,\n    handleStrikethroughText, handleSpoilerText,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useCallback, useEffect } from '../../../../lib/teact/teact';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { getActions } from '../../../../global';\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  }, [getLastEmoji, isEnabled, inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  }, []);\n\n  const insertEmoji = useCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  }, [getHtml, setHtml, inputId, updateFiltered]);\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport {\n  useCallback, useEffect, useState,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { ApiMessageEntityTypes } from '../../../../api/types';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  }, [inputRef, setHtml]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nfCRD3Y0nXzkML0bsjLH\",\"default\":\"QWzDb6x9al63G3nr9BGn\",\"alternate\":\"EgTekmCFBiBkvcvWELZw\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, memo, useState } from '../../lib/teact/teact';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: string;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  round?: boolean;\n  loadingOptions?: string[];\n  onChange: (value: string[]) => void;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  round,\n  loadingOptions,\n  onChange,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n    if (checked) {\n      newValues = [...values, value];\n    } else {\n      newValues = values.filter((v) => v !== value);\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  }, [onChange, values]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Checkbox\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={selected.indexOf(option.value) !== -1}\n          disabled={option.disabled || disabled}\n          round={round}\n          isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useState, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToFile, blobToDataUri } from '../../util/files';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loading from './Loading';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const lang = useLang();\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title=\"Drag to reposition\"\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropImage')}\n      >\n        <i className=\"icon icon-check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef, useCallback } from '../../lib/teact/teact';\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\n\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport Button from './Button';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  ariaLabel?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  leftElement,\n  buttonClassName,\n  secondaryIcon,\n  rightElement,\n  className,\n  ariaLabel,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble'),\n    [withPortalForMenu],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: withPortalForMenu }),\n    [withPortalForMenu],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClickEvent = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  }, [allowDisabledClick, clickArg, disabled, markIsTouched, onClick, ripple, unmarkIsTouched, href]);\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const lang = useLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    !isStatic && 'no-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n      role=\"listitem\"\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'link' : undefined}\n        ariaLabel={ariaLabel}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={(!inactive && contextActions) ? handleContextMenu : undefined}\n      >\n        {leftElement}\n        {icon && (\n          <i className={`icon icon-${icon}`} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {secondaryIcon && (\n          <Button\n            className=\"secondary-icon\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <i className={`icon icon-${secondaryIcon}`} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GC8g9Q16IaK76g6rcU78\"};","import React from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className }) => {\n  return (\n    <div className={buildClassName(styles.root, className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TextPart } from '../../types';\nimport type { CallbackAction } from '../../global/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\nimport Button from './Button';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  title?: TextPart[];\n  containerId?: string;\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n  action?: CallbackAction;\n  actionText?: string;\n  className?: string;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({\n  title, className,\n  message, duration = DEFAULT_DURATION, containerId, onDismiss,\n  action, actionText,\n}) => {\n  const actions = getActions();\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  const handleClick = useCallback(() => {\n    if (action) {\n      // @ts-ignore\n      actions[action.action](action.payload);\n    }\n    closeAndDismiss();\n  }, [action, actions, closeAndDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId={containerId}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {title && <div className=\"notification-title\">{title}</div>}\n          {message}\n        </div>\n        {action && actionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"Notification-button\"\n          >\n            {actionText}\n          </Button>\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, memo, useLayoutEffect } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const svg = container.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [containerRef, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const lang = useLang();\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel && <span className=\"subLabel\" dir={lang.isRtl ? 'auto' : undefined}>{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useCallback, memo } from '../../lib/teact/teact';\n\nimport Radio from './Radio';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { useCallback, useMemo, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n}) => {\n  const lang = useLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  return (\n    <div className={mainClassName}>\n      {label && (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <span className=\"label\" dir=\"auto\">{label}</span>\n          {!options && (\n            <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n          )}\n        </div>\n      )}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option no-selection', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef, useCallback, memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  }, [onActivate]);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n  }, []);\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  }, [onActivate]);\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default memo(ResponsiveHoverButton);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useRef, useEffect, memo, useCallback,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\n\nimport Loading from './Loading';\nimport Button from './Button';\nimport ShowTransition from './ShowTransition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  parentContainerClassName?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  parentContainerClassName,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(`.${parentContainerClassName} .ListItem-button`) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n  }, [parentContainerClassName]);\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n      <i className=\"icon icon-search\" />\n      <ShowTransition isOpen={Boolean(isLoading)} className=\"slow\">\n        <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n      </ShowTransition>\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.LegacyRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref,\n}) => {\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(\n    isOpen && !isHidden,\n    undefined,\n    isFirstRender && !shouldAnimateFirstRender,\n    isCustom ? false : undefined,\n    noCloseTransition,\n  );\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={buildClassName(className, transitionClassNames)}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = forceAspectRatio ? aspectRatio\n    : buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`);\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React, {\n  useRef,\n  memo,\n  useEffect,\n  useLayoutEffect, useCallback,\n} from '../../lib/teact/teact';\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { MouseButton } from '../../util/windowEnvironment';\nimport forceReflow from '../../util/forceReflow';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport MenuSeparator from './MenuSeparator';\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuPosition, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useCallback(() => tabRef.current, []);\n\n  const getRootElement = useCallback(\n    () => (contextRootElementSelector\n      ? tabRef.current!.closest(contextRootElementSelector)\n      : document.body),\n    [contextRootElementSelector],\n  );\n\n  const getMenuElement = useCallback(\n    () => document.querySelector('#portals')!\n      .querySelector('.Tab-context-menu .bubble'),\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      role=\"tab\"\n      aria-selected={isActive}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {renderText(title)}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <i className=\"icon icon-lock-badge blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Tab);\n","import React, { memo, useRef, useEffect } from '../../lib/teact/teact';\n\nimport type { FC } from '../../lib/teact/teact';\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\n\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: string;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  areFolders?: boolean;\n  activeTab: number;\n  big?: boolean;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, areFolders, activeTab, big, onSwitchTab,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div\n      className={`TabList no-selection no-scrollbar ${big ? 'big' : ''}`}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"tablist\"\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id ?? tab.title}\n          // TODO Remove dependency on usage context\n          title={(!areFolders || tab.id === ALL_FOLDER_ID) ? lang(tab.title) : tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { StateReducer, Dispatch } from '../useReducer';\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { pick, omit } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: string;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Signal } from '../util/signals';\nimport type { Scheduler } from '../util/schedulers';\n\nimport useThrottledCallback from './useThrottledCallback';\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport { register } from '../util/audioPlayer';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { selectTabState } from '../global/selectors';\n\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  }, [onTrackChange]);\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useCallback(() => {\n    if (src) {\n      play(src);\n    }\n  }, [src, play]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  }, [pause, playIfPresent, isPlaying]);\n\n  const setTime = useCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, proxy, setCurrentTime]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport fastBlur from '../lib/fastBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  isChatArchived, getCanDeleteChat, isUserId, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete: () => void;\n  handleChatFolderChange: () => void;\n  handleReport?: () => void;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder]);\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: lang('ChatList.Mute'),\n        icon: 'mute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }),\n      };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../lib/teact/teact-dom';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport type { IAnchorPosition } from '../types';\nimport {\n  IS_TOUCH_ENV, IS_PWA, IS_IOS,\n} from '../util/windowEnvironment';\n\nconst LONG_TAP_DURATION_MS = 200;\nconst IOS_PWA_CONTEXT_MENU_DELAY_MS = 100;\n\nfunction stopEvent(e: Event) {\n  e.stopImmediatePropagation();\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst useContextMenuHandlers = (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n  shouldDisableOnLink?: boolean,\n  shouldDisableOnLongTap?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      requestMutation(() => {\n        addExtraClass(e.target as HTMLElement, 'no-selection');\n      });\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    requestMutation(() => {\n      removeExtraClass(e.target as HTMLElement, 'no-selection');\n    });\n\n    if (isMenuDisabled || (shouldDisableOnLink && (e.target as HTMLElement).matches('a[href]'))) {\n      return;\n    }\n    e.preventDefault();\n\n    if (contextMenuPosition) {\n      return;\n    }\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, shouldDisableOnLink, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n  }, []);\n\n  // Support context menu on touch devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV || shouldDisableOnLongTap) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY, target } = originalEvent.touches[0];\n\n      if (contextMenuPosition || (shouldDisableOnLink && (target as HTMLElement).matches('a[href]'))) {\n        return;\n      }\n\n      // Temporarily intercept and clear the next click\n      element.addEventListener('touchend', (e) => {\n        // On iOS in PWA mode, the context menu may cause click-through to the element in the menu upon opening\n        if (IS_IOS && IS_PWA) {\n          setTimeout(() => {\n            element.removeEventListener('mousedown', stopEvent, {\n              capture: true,\n            });\n            element.removeEventListener('click', stopEvent, {\n              capture: true,\n            });\n          }, IOS_PWA_CONTEXT_MENU_DELAY_MS);\n        }\n        stopEvent(e);\n      }, {\n        once: true,\n        capture: true,\n      });\n\n      // On iOS15, in PWA mode, the context menu immediately closes after opening\n      if (IS_PWA && IS_IOS) {\n        element.addEventListener('mousedown', stopEvent, {\n          once: true,\n          capture: true,\n        });\n        element.addEventListener('click', stopEvent, {\n          once: true,\n          capture: true,\n        });\n      }\n\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, shouldDisableOnLongTap, elementRef, shouldDisableOnLink]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n\nexport default useContextMenuHandlers;\n","import type { Signal } from '../util/signals';\n\nimport useSyncEffect from './useSyncEffect';\nimport useSignal from './useSignal';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\nimport { useStateRef } from './useStateRef';\nimport { useSignalEffect } from './useSignalEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst useEnsureMessage = (\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getActions();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n\nexport default useEnsureMessage;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  getOrderedIds,\n  getUnreadCounters,\n  getChatsCount,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  addChatsCountCallback,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n\n  const handleForumPanelAnimationStart = useCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  }, []);\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\nimport { createCallbackManager } from '../util/callbacks';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\n\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useRef } from '../lib/teact/teact';\nimport generateIdFor from '../util/generateIdFor';\n\nconst store: Record<string, boolean> = {};\n\nconst useUniqueId = () => {\n  const idRef = useRef<string>();\n\n  if (!idRef.current) {\n    idRef.current = generateIdFor(store);\n    store[idRef.current] = true;\n  }\n\n  return idRef.current;\n};\n\nexport default useUniqueId;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress,\n    isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useState, useEffect } from '../lib/teact/teact';\nimport type { IAnchorPosition } from '../types';\n\ninterface Layout {\n  extraPaddingX?: number;\n  extraTopPadding?: number;\n  marginSides?: number;\n  extraMarginTop?: number;\n  menuElMinWidth?: number;\n  shouldAvoidNegativePosition?: boolean;\n  withPortal?: boolean;\n  isDense?: boolean; //  Allows you to place the menu as close to the edges of the area as possible\n}\n\nconst MENU_POSITION_VISUAL_COMFORT_SPACE_PX = 16;\nconst MENU_POSITION_BOTTOM_MARGIN = 12;\nconst EMPTY_RECT = {\n  width: 0, left: 0, height: 0, top: 0,\n};\n\nexport default function useMenuPosition(\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  getLayout?: () => Layout,\n) {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [transformOriginX, setTransformOriginX] = useState<number>();\n  const [transformOriginY, setTransformOriginY] = useState<number>();\n  const [withScroll, setWithScroll] = useState(false);\n  const [style, setStyle] = useState('');\n  const [menuStyle, setMenuStyle] = useState('opacity: 0;');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const anchorX = x;\n    const anchorY = y;\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const {\n      extraPaddingX = 0,\n      extraTopPadding = 0,\n      marginSides = 0,\n      extraMarginTop = 0,\n      menuElMinWidth = 0,\n      shouldAvoidNegativePosition = false,\n      withPortal = false,\n      isDense = false,\n    } = getLayout?.() || {};\n\n    const marginTop = menuEl ? parseInt(getComputedStyle(menuEl).marginTop, 10) + extraMarginTop : undefined;\n\n    const { offsetWidth: menuElWidth, offsetHeight: menuElHeight } = menuEl || { offsetWidth: 0, offsetHeight: 0 };\n    const menuRect = menuEl ? {\n      width: Math.max(menuElWidth, menuElMinWidth),\n      height: menuElHeight + marginTop!,\n    } : EMPTY_RECT;\n\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : EMPTY_RECT;\n\n    let horizontalPosition: 'left' | 'right';\n    let verticalPosition: 'top' | 'bottom';\n    if (isDense || (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left)) {\n      x += 3;\n      horizontalPosition = 'left';\n    } else if (x - menuRect.width - rootRect.left > 0) {\n      horizontalPosition = 'right';\n      x -= 3;\n    } else {\n      horizontalPosition = 'left';\n      x = 16;\n    }\n    setPositionX(horizontalPosition);\n\n    if (marginSides\n      && horizontalPosition === 'right' && (x + extraPaddingX + marginSides >= rootRect.width + rootRect.left)) {\n      x -= marginSides;\n    }\n\n    if (marginSides && horizontalPosition === 'left') {\n      if (x + extraPaddingX + marginSides + menuRect.width >= rootRect.width + rootRect.left) {\n        x -= marginSides;\n      } else if (x - marginSides <= 0) {\n        x += marginSides;\n      }\n    }\n\n    if (isDense || (y + menuRect.height < rootRect.height + rootRect.top)) {\n      verticalPosition = 'top';\n    } else {\n      verticalPosition = 'bottom';\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + rootRect.height;\n      }\n    }\n    setPositionY(verticalPosition);\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n\n    const addedYForPortalPositioning = (withPortal ? triggerRect.top : 0);\n    const addedXForPortalPositioning = (withPortal ? triggerRect.left : 0);\n\n    const leftWithPossibleNegative = Math.min(\n      x - triggerRect.left,\n      rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX,\n    );\n    let left = (horizontalPosition === 'left'\n      ? (withPortal || shouldAvoidNegativePosition\n        ? Math.max(MENU_POSITION_VISUAL_COMFORT_SPACE_PX, leftWithPossibleNegative)\n        : leftWithPossibleNegative)\n      : (x - triggerRect.left)) + addedXForPortalPositioning;\n    let top = y - triggerRect.top + addedYForPortalPositioning;\n\n    if (isDense) {\n      left = Math.min(left, rootRect.width - menuRect.width - MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n      top = Math.min(top, rootRect.height - menuRect.height - MENU_POSITION_VISUAL_COMFORT_SPACE_PX);\n    }\n\n    // Avoid hiding external parts of menus on mobile devices behind the edges of the screen (ReactionSelector for example)\n    const addedXForMenuPositioning = menuElMinWidth ? Math.max(0, (menuElMinWidth - menuElWidth) / 2) : 0;\n    if (left - addedXForMenuPositioning < 0 && shouldAvoidNegativePosition) {\n      left = addedXForMenuPositioning + MENU_POSITION_VISUAL_COMFORT_SPACE_PX;\n    }\n\n    const menuMaxHeight = rootRect.height - MENU_POSITION_BOTTOM_MARGIN - (marginTop || 0);\n\n    setWithScroll(menuMaxHeight < menuRect.height);\n    setMenuStyle(`max-height: ${menuMaxHeight}px;`);\n    setStyle(`left: ${left}px; top: ${top}px`);\n    const offsetX = (anchorX + addedXForPortalPositioning - triggerRect.left) - left;\n    const offsetY = (anchorY + addedYForPortalPositioning - triggerRect.top) - top - (marginTop || 0);\n    setTransformOriginX(horizontalPosition === 'left' ? offsetX : menuRect.width + offsetX);\n    setTransformOriginY(verticalPosition === 'bottom' ? menuRect.height + offsetY : offsetY);\n  }, [\n    anchor, getMenuElement, getRootElement, getTriggerElement, getLayout,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    transformOriginX,\n    transformOriginY,\n    style,\n    menuStyle,\n    withScroll,\n  };\n}\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useCallback(() => {\n    isMouseInside.current = true;\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  }, [menuCloseTimeout, onClose]);\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport usePrevious from './usePrevious';\nimport useForceUpdate from './useForceUpdate';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport type { OwnProps } from './CalendarModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default memo(CalendarModalAsync);\n","import React, { useCallback, useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport useLang from './useLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\nimport { getServerTimeOffset } from '../util/serverTime';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  }, [onScheduled]);\n\n  const handleMessageScheduleUntilOnline = useCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  }, [handleMessageSchedule]);\n\n  const handleCloseCalendar = useCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  }, [onCancel]);\n\n  const requestCalendar = useCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  }, []);\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect, useLayoutEffect, useRef } from '../lib/teact/teact';\n\nfunction useTimeout(callback: () => void, delay?: number) {\n  const savedCallback = useRef(callback);\n\n  useLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import generateIdFor from './generateIdFor';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n  acceptsBuffer?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateIdFor(requestStates);\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { animate } from './animation';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { IS_ANDROID } from './windowEnvironment';\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { selectCanAnimateInterface } from '../global/selectors';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\n\nimport { AudioOrigin, GlobalSearchContent } from '../types';\nimport type { ApiMessage } from '../api/types';\n\nimport { IS_SAFARI } from './windowEnvironment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport type { MessageKey } from '../global/helpers';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import { IS_IOS } from './windowEnvironment';\nimport { Lethargy } from './lethargy';\nimport { clamp, round } from './math';\nimport { debounce } from './schedulers';\nimport windowSize from './windowSize';\n\nexport enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent | WheelEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent | WheelEvent,\n    captureEvent: MouseEvent | TouchEvent | WheelEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n    cancelDrag?: (x: boolean, y: boolean) => void,\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => boolean;\n  onZoom?: (e: TouchEvent | WheelEvent, params: {\n    // Absolute zoom level\n    zoom?: number;\n    // Relative zoom factor\n    zoomFactor?: number;\n\n    // center coordinate of the initial pinch\n    initialCenterX: number;\n    initialCenterY: number;\n\n    // offset of the pinch center (current from initial)\n    dragOffsetX: number;\n    dragOffsetY: number;\n\n    // center coordinate of the current pinch\n    currentCenterX: number;\n    currentCenterY: number;\n  }) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  onDoubleClick?: (e: MouseEvent | RealTouchEvent | WheelEvent, params: { centerX: number; centerY: number }) => void;\n  excludedClosestSelector?: string;\n  selectorToPreventScroll?: string;\n  withNativeDrag?: boolean;\n  maxZoom?: number;\n  minZoom?: number;\n  doubleTapZoom?: number;\n  initialZoom?: number;\n  isNotPassive?: boolean;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\ntype TSwipeAxis =\n  'x'\n  | 'y'\n  | undefined;\n\nexport const IOS_SCREEN_EDGE_THRESHOLD = 20;\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\nconst RELEASE_WHEEL_ZOOM_DELAY = 150;\nconst RELEASE_WHEEL_DRAG_DELAY = 150;\n\nfunction getDistance(a: Touch, b?: Touch) {\n  if (!b) return 0;\n  return Math.hypot((b.pageX - a.pageX), (b.pageY - a.pageY));\n}\n\nfunction getTouchCenter(a: Touch, b: Touch) {\n  return {\n    x: (a.pageX + b.pageX) / 2,\n    y: (a.pageY + b.pageY) / 2,\n  };\n}\n\nlet lastClickTime = 0;\nconst lethargy = new Lethargy({\n  stability: 5,\n  sensitivity: 25,\n  tolerance: 0.6,\n  delay: 150,\n});\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | WheelEvent | undefined;\n  let hasMoved = false;\n  let hasSwiped = false;\n  let isZooming = false;\n  let initialDistance = 0;\n  let wheelZoom = options.initialZoom ?? 1;\n  let initialDragOffset = {\n    x: 0,\n    y: 0,\n  };\n  let isDragCanceled = {\n    x: false,\n    y: false,\n  };\n  const currentWindowSize = windowSize.get();\n  let initialTouchCenter = {\n    x: currentWindowSize.width / 2,\n    y: currentWindowSize.height / 2,\n  };\n  let initialSwipeAxis: TSwipeAxis | undefined;\n  const minZoom = options.minZoom ?? 1;\n  const maxZoom = options.maxZoom ?? 4;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      if (!options.withNativeDrag && options.onDrag) {\n        e.preventDefault();\n      }\n\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      // We need to always listen on `touchstart` target:\n      // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n      const target = e.target as HTMLElement;\n      target.addEventListener('touchmove', onMove, { passive: true });\n      target.addEventListener('touchend', onRelease);\n      target.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (e.touches.length === 2) {\n          initialDistance = getDistance(e.touches[0], e.touches[1]);\n          initialTouchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n        }\n      }\n    }\n\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e?: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      (captureEvent.target as HTMLElement).removeEventListener('touchcancel', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchend', onRelease);\n      (captureEvent.target as HTMLElement).removeEventListener('touchmove', onMove);\n\n      if (IS_IOS && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = '';\n          });\n      }\n\n      if (e) {\n        if (hasMoved) {\n          if (options.onRelease) {\n            options.onRelease(e);\n          }\n        } else if (e.type === 'mouseup') {\n          if (options.onDoubleClick && Date.now() - lastClickTime < 300) {\n            options.onDoubleClick(e, {\n              centerX: captureEvent!.pageX!,\n              centerY: captureEvent!.pageY!,\n            });\n          } else if (options.onClick && (!('button' in e) || e.button === 0)) {\n            options.onClick(e);\n          }\n          lastClickTime = Date.now();\n        }\n      }\n    }\n\n    hasMoved = false;\n    hasSwiped = false;\n    isZooming = false;\n    initialDistance = 0;\n    wheelZoom = clamp(wheelZoom, minZoom, maxZoom);\n    initialSwipeAxis = undefined;\n    initialDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    isDragCanceled = {\n      x: false,\n      y: false,\n    };\n    const newWindowSize = windowSize.get();\n    initialTouchCenter = {\n      x: newWindowSize.width / 2,\n      y: newWindowSize.height / 2,\n    };\n    captureEvent = undefined;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n\n        if (options.onZoom && initialDistance > 0 && e.touches.length === 2) {\n          const endDistance = getDistance(e.touches[0], e.touches[1]);\n          const touchCenter = getTouchCenter(e.touches[0], e.touches[1]);\n          const dragOffsetX = touchCenter.x - initialTouchCenter.x;\n          const dragOffsetY = touchCenter.y - initialTouchCenter.y;\n          const zoomFactor = endDistance / initialDistance;\n          options.onZoom(e, {\n            zoomFactor,\n            initialCenterX: initialTouchCenter.x,\n            initialCenterY: initialTouchCenter.y,\n            dragOffsetX,\n            dragOffsetY,\n            currentCenterX: touchCenter.x,\n            currentCenterY: touchCenter.y,\n          });\n          if (zoomFactor !== 1) hasMoved = true;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      let shouldPreventScroll = false;\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, {\n          dragOffsetX,\n          dragOffsetY,\n        });\n        shouldPreventScroll = true;\n      }\n\n      if (options.onSwipe && !hasSwiped) {\n        hasSwiped = onSwipe(e, dragOffsetX, dragOffsetY);\n        shouldPreventScroll = hasSwiped;\n      }\n\n      if (IS_IOS && shouldPreventScroll && options.selectorToPreventScroll) {\n        Array.from(document.querySelectorAll<HTMLElement>(options.selectorToPreventScroll))\n          .forEach((scrollable) => {\n            scrollable.style.overflow = 'hidden';\n          });\n      }\n    }\n  }\n\n  function onSwipe(e: MouseEvent | RealTouchEvent, dragOffsetX: number, dragOffsetY: number) {\n    // Avoid conflicts with swipe-to-back gestures\n    if (IS_IOS) {\n      const x = (e as RealTouchEvent).touches[0].pageX;\n      if (x <= IOS_SCREEN_EDGE_THRESHOLD || x >= windowSize.get().width - IOS_SCREEN_EDGE_THRESHOLD) {\n        return false;\n      }\n    }\n\n    const xAbs = Math.abs(dragOffsetX);\n    const yAbs = Math.abs(dragOffsetY);\n\n    if (dragOffsetX && dragOffsetY) {\n      const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n      // Diagonal swipe\n      if (ratio < 2) {\n        return false;\n      }\n    }\n\n    let axis: TSwipeAxis | undefined;\n    if (xAbs >= SWIPE_THRESHOLD) {\n      axis = 'x';\n    } else if (yAbs >= SWIPE_THRESHOLD) {\n      axis = 'y';\n    }\n\n    if (!axis) {\n      return false;\n    }\n\n    if (!initialSwipeAxis) {\n      initialSwipeAxis = axis;\n    } else if (initialSwipeAxis !== axis) {\n      // Prevent horizontal swipe after vertical to prioritize scroll\n      return false;\n    }\n\n    return processSwipe(e, axis, dragOffsetX, dragOffsetY, options.onSwipe!);\n  }\n\n  const releaseWheelDrag = debounce(onRelease, RELEASE_WHEEL_DRAG_DELAY, false);\n  const releaseWheelZoom = debounce(onRelease, RELEASE_WHEEL_ZOOM_DELAY, false);\n\n  function onWheelCapture(e: WheelEvent) {\n    if (hasMoved) return;\n    onCapture(e);\n    hasMoved = true;\n    initialTouchCenter = { x: e.x, y: e.y };\n  }\n\n  function onWheelZoom(e: WheelEvent) {\n    if (!options.onZoom) return;\n    onWheelCapture(e);\n    const dragOffsetX = e.x - initialTouchCenter.x;\n    const dragOffsetY = e.y - initialTouchCenter.y;\n    const delta = clamp(e.deltaY, -25, 25);\n    wheelZoom -= delta * 0.01;\n    wheelZoom = clamp(wheelZoom, minZoom * 0.5, maxZoom * 3);\n    isZooming = true;\n    options.onZoom(e, {\n      zoom: round(wheelZoom, 2),\n      initialCenterX: initialTouchCenter.x,\n      initialCenterY: initialTouchCenter.y,\n      dragOffsetX,\n      dragOffsetY,\n      currentCenterX: e.x,\n      currentCenterY: e.y,\n    });\n    releaseWheelZoom(e);\n  }\n\n  function onWheelDrag(e: WheelEvent) {\n    if (!options.onDrag) return;\n    onWheelCapture(e);\n    // Ignore wheel inertia if drag is canceled in this direction\n    if (!isDragCanceled.x || Math.sign(initialDragOffset.x) === Math.sign(e.deltaX)) {\n      initialDragOffset.x -= e.deltaX;\n    }\n    if (!isDragCanceled.y || Math.sign(initialDragOffset.y) === Math.sign(e.deltaY)) {\n      initialDragOffset.y -= e.deltaY;\n    }\n    const { x, y } = initialDragOffset;\n    options.onDrag(e, captureEvent!, {\n      dragOffsetX: x,\n      dragOffsetY: y,\n    }, (dx, dy) => {\n      isDragCanceled = { x: dx, y: dy };\n    });\n    releaseWheelDrag(e);\n  }\n\n  function onWheel(e: WheelEvent) {\n    if (!options.onZoom && !options.onDrag) return;\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const { doubleTapZoom = 3 } = options;\n    if (options.onDoubleClick && Object.is(e.deltaX, -0) && Object.is(e.deltaY, -0) && e.ctrlKey) {\n      onWheelCapture(e);\n      wheelZoom = wheelZoom > 1 ? 1 : doubleTapZoom;\n      options.onDoubleClick(e, { centerX: e.pageX, centerY: e.pageY });\n      hasMoved = false;\n      return;\n    }\n    const metaKeyPressed = e.metaKey || e.ctrlKey || e.shiftKey;\n    if (metaKeyPressed) {\n      onWheelZoom(e);\n    }\n    if (!metaKeyPressed && !isZooming) {\n      // Check if this event produced by user scroll and not by inertia\n      const isUserEvent = lethargy.check(e);\n      if (wheelZoom !== 1 || isUserEvent) {\n        onWheelDrag(e);\n      }\n    }\n  }\n\n  element.addEventListener('wheel', onWheel);\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: !options.isNotPassive });\n\n  return () => {\n    onRelease();\n    element.removeEventListener('wheel', onWheel);\n    element.removeEventListener('touchstart', onCapture);\n    element.removeEventListener('mousedown', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event,\n  currentSwipeAxis: TSwipeAxis,\n  dragOffsetX: number,\n  dragOffsetY: number,\n  onSwipe: (e: Event, direction: SwipeDirection) => boolean,\n) {\n  if (currentSwipeAxis === 'x') {\n    if (dragOffsetX < 0) {\n      return onSwipe(e, SwipeDirection.Left);\n    } else {\n      return onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (currentSwipeAxis === 'y') {\n    if (dragOffsetY < 0) {\n      return onSwipe(e, SwipeDirection.Up);\n    } else {\n      return onSwipe(e, SwipeDirection.Down);\n    }\n  }\n\n  return false;\n}\n","/**\n * Lethargy help distinguish between scroll events initiated by the user, and those by inertial scrolling.\n * Lethargy does not have external dependencies.\n *\n * @param stability - Specifies the length of the rolling average.\n * In effect, the larger the value, the smoother the curve will be.\n * This attempts to prevent anomalies from firing 'real' events. Valid values are all positive integers,\n * but in most cases, you would need to stay between 5 and around 30.\n *\n * @param sensitivity - Specifies the minimum value for wheelDelta for it to register as a valid scroll event.\n * Because the tail of the curve have low wheelDelta values,\n * this will stop them from registering as valid scroll events.\n * The unofficial standard wheelDelta is 120, so valid values are positive integers below 120.\n *\n * @param tolerance - Prevent small fluctuations from affecting results.\n * Valid values are decimals from 0, but should ideally be between 0.05 and 0.3.\n *\n * Based on https://github.com/d4nyll/lethargy\n */\n\nexport type LethargyConfig = {\n  stability?: number;\n  sensitivity?: number;\n  tolerance?: number;\n  delay?: number;\n};\n\nexport class Lethargy {\n  stability: number;\n\n  sensitivity: number;\n\n  tolerance: number;\n\n  delay: number;\n\n  lastUpDeltas: Array<number>;\n\n  lastDownDeltas: Array<number>;\n\n  deltasTimestamp: Array<number>;\n\n  constructor({\n    stability = 8,\n    sensitivity = 100,\n    tolerance = 1.1,\n    delay = 150,\n  }: LethargyConfig = {}) {\n    this.stability = stability;\n    this.sensitivity = sensitivity;\n    this.tolerance = tolerance;\n    this.delay = delay;\n    this.lastUpDeltas = new Array(this.stability * 2).fill(0);\n    this.lastDownDeltas = new Array(this.stability * 2).fill(0);\n    this.deltasTimestamp = new Array(this.stability * 2).fill(0);\n  }\n\n  check(e: any) {\n    let lastDelta;\n    e = e.originalEvent || e;\n    if (e.wheelDelta !== undefined) {\n      lastDelta = e.wheelDelta;\n    } else if (e.deltaY !== undefined) {\n      lastDelta = e.deltaY * -40;\n    } else if (e.detail !== undefined || e.detail === 0) {\n      lastDelta = e.detail * -40;\n    }\n    this.deltasTimestamp.push(Date.now());\n    this.deltasTimestamp.shift();\n    if (lastDelta > 0) {\n      this.lastUpDeltas.push(lastDelta);\n      this.lastUpDeltas.shift();\n      return this.isInertia(1);\n    } else {\n      this.lastDownDeltas.push(lastDelta);\n      this.lastDownDeltas.shift();\n      return this.isInertia(-1);\n    }\n  }\n\n  isInertia(direction: number) {\n    const lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n    if (lastDeltas[0] === undefined) return direction;\n    if (\n      this.deltasTimestamp[this.stability * 2 - 2] + this.delay > Date.now()\n      && lastDeltas[0] === lastDeltas[this.stability * 2 - 1]\n    ) {\n      return false;\n    }\n    const lastDeltasOld = lastDeltas.slice(0, this.stability);\n    const lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n    const oldSum = lastDeltasOld.reduce((t, s) => t + s);\n    const newSum = lastDeltasNew.reduce((t, s) => t + s);\n    const oldAverage = oldSum / lastDeltasOld.length;\n    const newAverage = newSum / lastDeltasNew.length;\n    return Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance)\n      && this.sensitivity < Math.abs(newAverage);\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiMessageEntity, ApiFormattedText } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `http://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import type React from '../lib/teact/teact';\n\nconst stopEvent = (e: React.UIEvent | Event | React.FormEvent) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nexport default stopEvent;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","filter","_","i","map","_ref2","isUser","user","useEffect","subscribed","React","buildClassName","onClick","p","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","lastSyncTime","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isPreviewLoaded","markPreviewLoaded","has","transitionClassNames","useMediaTransition","isAnimationReady","markAnimationReady","handlePreviewLoad","add","size","styles","style","buildStyle","src","onLoad","AnimatedIcon","noTransition","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","_data","_data$idx","_data2","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRender","shouldRenderSpinner","spinnerClassNames","useShowTransition","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","captureEvents","onCapture","onRelease","onDrag","transcribeSvgMemo","dangerouslySetInnerHTML","__html","renderFirstLine","title","fileName","fullClassName","AudioOrigin","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","formatMediaDateTime","renderAudio","svgMemo","onClickTranscribe","draggable","renderVoice","runDebounced","debounce","cb","chatOrUserId","countryList","phoneCodes","phoneCodeList","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","userId","usernames","phoneNumber","isSelf","chatUsernames","areNotificationsEnabled","setAreNotificationsEnabled","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getTopicLink","username","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockContact","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","contactId","accessHash","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","isText","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","sender","onMediaClick","dispatch","document","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","SUPPORTED_VIDEO_CONTENT_TYPES","mimeType","SUPPORTED_IMAGE_CONTENT_TYPES","handleClick","File","name","thumbnailDataUri","actionIcon","isMessageDocumentVideo","fakeType","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","shouldSpinnerRender","getColorFromExtension","sizeString","getDocumentThumbnailDimensions","alt","VERIFIED_ICON","VerifiedIcon","peer","noVerified","noFake","withEmojiStatus","emojiStatusSize","noLoopLimit","onEmojiStatusClick","getUserFullName","emojiStatus","isPremium","isVerified","FakeIcon","CustomEmoji","documentId","loopLimit","EMOJI_STATUS_LOOP_LIMIT","observeIntersectionForLoading","PremiumIcon","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withUsername","withFullInfo","withUpdatingStatus","withChatType","noRtl","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","getMainUsername","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","MessageOutgoingStatus","idPrefix","isProtected","mediaBlobUrl","getMessageVideo","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","onContextMenu","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","top","shiftX","shiftY","setAttribute","Keys","Transition","activeKey","DEFAULT_TEXT","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","autoComplete","type","tabIndex","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","disabled","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","setTimeout","lockedSelectedIds","unlockedSelectedIds","MEMO_EMPTY_ARRAY","unlockedIds","includes","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","slice","splice","indexOf","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","items","renderCheckbox","Checkbox","allowDisabledClick","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","PREMIUM_ICON","store","withGradient","big","html","generateIdFor","getPremiumIconGradient","userStatus","selectUserStatus","statusIcon","noStatusOrTyping","adminMember","customTitle","isOwner","isUserOnline","getUserStatus","photo","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getFirstLetters","Spinner","getUserColorKey","connectionState","isPrivate","mediaViewer","currentTopicId","userFullInfo","chatFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","usePrevious","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","profile","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","handleClickPremium","fromUserId","selectPreviousMedia","selectNextMedia","_membersCount","_membersCount2","element","querySelector","selectorToPreventScroll","onSwipe","direction","SwipeDirection","letterClassName","renderPhotoTabs","renderPhoto","ProfilePhoto","reaction","availableReactions","isCustom","availableReaction","find","available","isSameReaction","staticIconId","staticIcon","observeIntersectionForPlaying","blankUrl","subject","messageIds","reportMessages","reportPeer","reportProfilePhoto","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","contentForStatusMenuContext","arg","noPlay","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isCurrentUserPremium","noShowPremium","sharedCanvasRef","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","openStickerSet","setEmojiStatus","menuRef","hasCustomColor","shouldUseTextColor","rgbColor","customColor","useDynamicColorListener","isCustomEmoji","hasEffect","stickerSetInfo","isLocked","shouldPlay","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","closest","getMenuElement","positionX","positionY","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","Date","now","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","MenuItem","emoji","onMouseDown","preventMessageInputBlurWithBubbling","initialSection","StickerView","containerRef","isSmall","shouldLoop","shouldPreloadPreview","withSharedAnimation","noFastClick","Menu","autoClose","iconEmojiId","TopicDefaultIcon","iconColor","typingUser","typingUserName","replace","trim","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","url","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","handleMessageClick","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","renderMessageText","highlight","emojiSize","isSimple","truncateLength","shouldRenderAsHtml","entities","contentNotSupportedText","renderTextWithEntities","noEmoji","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","some","ApiMessageEntityTypes","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","ChatFolderModal","useModuleLoader","Bundles","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isShown","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","isForumPanelActive","selectIsForumPanelOpen","ChatBadge","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","messageListType","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","draft","selectDraft","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","onDragEnter","openChat","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","forceOnHeavyAnimation","shouldReplaceHistory","handleDragEnter","handleDelete","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","console","log","getAccessibleName","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withPortalForMenu","AvatarBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","payload","SettingsScreens","AnimatedIconFromSticker","fluid","pill","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","buttonClassName","Badge","RESERVED_HOTKEYS","isForumPanelOpen","canDisplayArchive","onLeftColumnContentChange","openNextChat","shouldIgnoreDragRef","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","useHotkeys","targetIndexDelta","IS_PWA","addEventListener","handleKeyDown","removeEventListener","IS_MAC_OS","metaKey","ctrlKey","code","startsWith","digit","match","isArchiveInList","shift","position","Number","LeftColumnContent","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","newTabActionSeparator","isSeparator","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","destructive","useTopicContextActions","ConfirmDialog","confirmIsDestructive","confirmHandler","confirmLabel","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","ownProps","detachWhenChanged","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","hash","captureEscKeyListener","requestNextMutation","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","withForumActions","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","noForumTopicPanel","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","isRoundVideo","getMessageRoundVideo","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","inChatList","isSpoiler","renderSummary","opacity","classList","remove","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","reduce","prevOrderById","prevChatId","mapValues","order","getSenderName","getSenderTitle","isChatGroup","HeaderMenuContainer","selectIsInSelectMode","noMenu","bot","selectChatBot","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","canRestartBot","selectIsUserBlocked","canStartBot","selectIsChatBotNotStarted","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","canViewStatistics","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","menuButtonRef","isMenuOpen","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleJoinRequestsClick","screen","ManagementScreens","handleSearchClick","requestMeasure","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","anchor","withExtraActions","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomEmojiTooltip","CustomSend","isQuick","isGeneric","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","handleFilesDrop","async","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","concat","from","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerId","onDragOver","handleDragOver","clearTimeout","DropTarget","EmojiTooltip","AbsoluteVideo","constructor","videoUrl","container","_defineProperty","this","createElement","load","noLoop","appendChild","recalculatePositionAndSize","play","paused","safePlay","pause","destroy","updatePosition","SIZE","THROTTLE_MS","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","settings","byKey","replyingToId","selectReplyingToId","isSelectModeActive","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","captionLimit","isAttachmentModalInput","editableInputId","getHtml","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","prefixId","textColor","playersById","Map","clearPlayers","ids","player","get","delete","synchronizeElements","playerIdsToClear","keys","querySelectorAll","dataset","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","customEmojis","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","lottie","ensureRLottie","init","coords","isLowPriority","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","removeCustomEmojiInputRenderCallback","useEffectWithPrevDeps","prevTextColor","throttledSynchronizeElements","useThrottledCallback","useResizeObserver","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","scrollHeight","newHeight","isOverflown","exec","transitionDuration","toggle","htmlRef","innerHTML","focusInput","isHeavyAnimating","focusEditableElement","handleCloseTextFormatter","selection","getSelection","removeAllRanges","empty","clearSelection","checkSelection","IS_IOS","rangeCount","IS_ANDROID","selectionRange","getRangeAt","selectedText","toString","isSelectionInsideInput","EDITABLE_INPUT_ID","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isCollapsed","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","useDerivedState","contentEditable","textContent","IS_EMOJI_SUPPORTED","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextFormatter","anchorPosition","SymbolMenu","canSendGifs","canSendStickers","isReady","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","isAttachmentModal","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","isSymbolMenuForced","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","query","handleSymbolMenuOpen","messageInput","EDITABLE_INPUT_MODAL_CSS_SELECTOR","EDITABLE_INPUT_CSS_SELECTOR","activeElement","ResponsiveHoverButton","onActivate","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","el","replaceWith","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","execCommand","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","toLowerCase","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","entry","Promise","resolve","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","prepareForRegExp","MAX_NESTING_PARENTS","inputId","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","setHtml","getSelectionRange","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","extractLastEmojiThrottled","useThrottledResolver","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","useDerivedSignal","hasCustomEmojis","lastEmoji","insertCustomEmoji","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","substring","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","pickTruthy","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","useEmojiTooltip","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","default","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","atIndex","lastIndexOf","emojiHtml","getElementById","emojiCode","newShouldAutoInsert","endsWith","test","isEmojiTooltipOpen","closeEmojiTooltip","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","insertMention","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useAsyncRendering","dependencies","delay","isDisabled","timeoutRef","useSyncEffect","isAlternateColor","loadingOptions","setValues","handleChange","newValues","v","option","subLabel","cropperResultOptions","quality","format","circle","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","imgFile","cropContainer","offsetHeight","enableZoom","boundary","viewport","blobToDataUri","bind","err","DEBUG","initCropper","ensureCroppie","handleCropClick","croppedImg","blobToFile","hasCloseButton","children","buttonRef","leftElement","secondaryIcon","rightElement","onSecondaryIconClick","markIsTouched","unmarkIsTouched","handleClickEvent","MouseButton","handleSecondaryIconClick","handleSecondaryIconMouseDown","ButtonElementTag","RippleEffect","MenuSeparator","DEFAULT_DURATION","onDismiss","actionText","actions","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","RADIUSES","xl","square","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","hidden","loadingOption","Radio","step","renderValue","mainClassName","trackWidth","index","openTimeout","isFirstTimeActivation","buttonProps","isMouseInside","parentContainerClassName","focused","spinnerColor","spinnerBackgroundColor","autoFocusSearch","onReset","onFocus","onBlur","onSpinnerClick","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","backgroundColor","noCloseTransition","shouldAnimateFirstRender","prevIsOpen","prevChildren","fromChildrenRef","isFirstRender","variant","forceAspectRatio","inline","classNames","onCheck","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","tabEl","prevTabEl","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","body","SCROLL_DURATION","tabs","areFolders","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","animateHorizontalScroll","tab","_tab$id","Tab","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","ms","throttledResolver","useDebouncedResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","metadata","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","stop","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","volume","isFinite","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","drawImage","fastBlur","onload","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","stopImmediatePropagation","isMenuDisabled","shouldDisableOnLink","shouldDisableOnLongTap","setIsContextMenuOpen","addExtraClass","removeExtraClass","timer","clearLongPressTimer","startLongPressTimer","originalEvent","touches","capture","emulateContextMenuEvent","passive","resolverOrDependency","_dependencies","isAsync","useSignal","resolverRef","useStateRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","newValue","replyOriginForId","loadMessage","loadMessageThrottled","throttled","throttle","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","useGetSelectionRange","inputSelector","getRange","setRange","onSelectionChange","range","Element","shouldPreventDefault","handleScroll","deltaX","deltaY","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","HTMLElement","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","isConnected","useUniqueId","idRef","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","cacheBuster","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_POSITION_VISUAL_COMFORT_SPACE_PX","MENU_POSITION_BOTTOM_MARGIN","EMPTY_RECT","setPositionX","setPositionY","setTransformOriginX","setTransformOriginY","withScroll","setWithScroll","setStyle","setMenuStyle","anchorX","anchorY","menuEl","rootEl","extraPaddingX","extraTopPadding","marginSides","extraMarginTop","menuElMinWidth","isDense","marginTop","parseInt","getComputedStyle","menuElWidth","menuElHeight","menuRect","rootRect","horizontalPosition","verticalPosition","triggerRect","addedYForPortalPositioning","addedXForPortalPositioning","leftWithPossibleNegative","addedXForMenuPositioning","menuMaxHeight","offsetX","offsetY","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","markMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","useRunDebounced","CalendarModal","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getTime","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","initial","_signalRef$current","signalRef","createSignal","effect","isFirstRun","dependency","isSignal","subscribe","useEffectOnce","cleanupEffect","callback","savedCallback","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","mul_sum","shg_sum","vmin","vmax","putImageData","ConnectorClass","channel","_len","args","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","requestState","promise","reject","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","update","response","callbackArgs","createConnector","worker","connector","handleMessage","stopById","containerWidth","scrollId","path","remainingPath","isStopped","random","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","animateScroll","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","elementTop","elementHeight","scrollTop","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","offset","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","newScrollTop","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","preload","IS_SAFARI","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","queue","getTrackQueue","chatAudio","getMessageKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","IOS_SCREEN_EDGE_THRESHOLD","MOVED_THRESHOLD","SWIPE_THRESHOLD","RELEASE_WHEEL_ZOOM_DELAY","RELEASE_WHEEL_DRAG_DELAY","getDistance","hypot","pageX","pageY","getTouchCenter","lastClickTime","lethargy","stability","sensitivity","tolerance","lastUpDeltas","lastDownDeltas","deltasTimestamp","check","lastDelta","wheelDelta","detail","isInertia","lastDeltas","lastDeltasOld","lastDeltasNew","oldSum","newSum","oldAverage","newAverage","_options$initialZoom","_options$minZoom","_options$maxZoom","captureEvent","hasMoved","hasSwiped","isZooming","initialDistance","wheelZoom","initialZoom","initialDragOffset","isDragCanceled","currentWindowSize","windowSize","initialSwipeAxis","initialTouchCenter","minZoom","maxZoom","excludedClosestSelector","withNativeDrag","onMove","withCursor","scrollable","overflow","onDoubleClick","centerX","centerY","clamp","newWindowSize","onZoom","endDistance","touchCenter","dragOffsetX","dragOffsetY","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","shouldPreventScroll","xAbs","yAbs","axis","currentSwipeAxis","Left","Right","Up","Down","processSwipe","releaseWheelDrag","releaseWheelZoom","onWheelCapture","onWheel","doubleTapZoom","is","metaKeyPressed","delta","zoom","onWheelZoom","isUserEvent","sign","dx","dy","onWheelDrag","isNotPassive","hex2rgb","param","rgb2hex","p0","rgb2hsb","d","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","preloadImage","naturalHeight","naturalWidth","blockSize","getColorLuma","getPatternColor","hue","saturation","cycleRestrict","force","forcePlaceCaretAtEnd","createRange","lastChild","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","nodeType","messageEl","firstChild","removeChild","isElementInViewport","display","windowHeight","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","ENTITY_CLASS_BY_NODE_NAME","INS","S","STRIKE","PRE","BLOCKQUOTE","MAX_TAG_DEEPNESS","parseMessageInput","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","parseMarkdown","RE_LINK_TEMPLATE","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","nodeName","getEntityTypeFromNode","rawIndex","language","getEntityDataFromNode","hasChildNodes","extractorEl","insertHtmlInSelection","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","caretRange","setEnd","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","openSystemFilesDialog","accept","noMultiple","removeAttribute","onchange","click"],"sourceRoot":""}